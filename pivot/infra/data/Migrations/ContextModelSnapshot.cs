// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pivot.Infra.Data;

namespace Pivot.Infra.Data.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Pivot.Domain.Atividade", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo");

                    b.Property<DateTime>("DataAlteracao");

                    b.Property<DateTime>("DataCriacao");

                    b.Property<string>("Descricao");

                    b.Property<long>("RamoId");

                    b.Property<int>("UsuarioAlteracaoId");

                    b.Property<string>("UsuarioAlteracaoLogin");

                    b.Property<int>("UsuarioCriacaoId");

                    b.Property<string>("UsuarioCriacaoLogin");

                    b.HasKey("Id");

                    b.HasIndex("RamoId");

                    b.ToTable("Atividade");
                });

            modelBuilder.Entity("Pivot.Domain.Cidade", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo");

                    b.Property<DateTime>("DataAlteracao");

                    b.Property<DateTime>("DataCriacao");

                    b.Property<string>("Descricao");

                    b.Property<long>("EstadoId");

                    b.Property<int>("UsuarioAlteracaoId");

                    b.Property<string>("UsuarioAlteracaoLogin");

                    b.Property<int>("UsuarioCriacaoId");

                    b.Property<string>("UsuarioCriacaoLogin");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.ToTable("Cidade");
                });

            modelBuilder.Entity("Pivot.Domain.Contato", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo");

                    b.Property<string>("Cargo");

                    b.Property<long>("CidadeId");

                    b.Property<DateTime>("DataAlteracao");

                    b.Property<DateTime>("DataCriacao");

                    b.Property<long>("MarcaId");

                    b.Property<string>("Nome");

                    b.Property<int>("UsuarioAlteracaoId");

                    b.Property<string>("UsuarioAlteracaoLogin");

                    b.Property<int>("UsuarioCriacaoId");

                    b.Property<string>("UsuarioCriacaoLogin");

                    b.HasKey("Id");

                    b.HasIndex("CidadeId");

                    b.HasIndex("MarcaId");

                    b.ToTable("Contato");
                });

            modelBuilder.Entity("Pivot.Domain.Email", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo");

                    b.Property<long>("ContatoId");

                    b.Property<DateTime>("DataAlteracao");

                    b.Property<DateTime>("DataCriacao");

                    b.Property<string>("Endereco");

                    b.Property<int>("UsuarioAlteracaoId");

                    b.Property<string>("UsuarioAlteracaoLogin");

                    b.Property<int>("UsuarioCriacaoId");

                    b.Property<string>("UsuarioCriacaoLogin");

                    b.HasKey("Id");

                    b.HasIndex("ContatoId");

                    b.ToTable("Email");
                });

            modelBuilder.Entity("Pivot.Domain.Estado", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo");

                    b.Property<DateTime>("DataAlteracao");

                    b.Property<DateTime>("DataCriacao");

                    b.Property<string>("Descricao");

                    b.Property<string>("Sigla");

                    b.Property<int>("UsuarioAlteracaoId");

                    b.Property<string>("UsuarioAlteracaoLogin");

                    b.Property<int>("UsuarioCriacaoId");

                    b.Property<string>("UsuarioCriacaoLogin");

                    b.HasKey("Id");

                    b.ToTable("Estado");
                });

            modelBuilder.Entity("Pivot.Domain.Grafia", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo");

                    b.Property<DateTime>("DataAlteracao");

                    b.Property<DateTime>("DataCriacao");

                    b.Property<string>("Descricao");

                    b.Property<long>("MarcaId");

                    b.Property<int>("UsuarioAlteracaoId");

                    b.Property<string>("UsuarioAlteracaoLogin");

                    b.Property<int>("UsuarioCriacaoId");

                    b.Property<string>("UsuarioCriacaoLogin");

                    b.HasKey("Id");

                    b.HasIndex("MarcaId");

                    b.ToTable("Grafia");
                });

            modelBuilder.Entity("Pivot.Domain.Marca", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Abrangencia");

                    b.Property<long>("AtividadeId");

                    b.Property<bool>("Ativo");

                    b.Property<DateTime>("DataAlteracao");

                    b.Property<DateTime>("DataCriacao");

                    b.Property<string>("Descricao");

                    b.Property<int>("FaixaEtaria");

                    b.Property<string>("Logo");

                    b.Property<long>("MarcaAgrupadaId");

                    b.Property<int>("ModeloOperacional");

                    b.Property<int>("PricePoint");

                    b.Property<long>("RepresentanteId");

                    b.Property<string>("Url");

                    b.Property<int>("UsuarioAlteracaoId");

                    b.Property<string>("UsuarioAlteracaoLogin");

                    b.Property<int>("UsuarioCriacaoId");

                    b.Property<string>("UsuarioCriacaoLogin");

                    b.HasKey("Id");

                    b.HasIndex("AtividadeId");

                    b.HasIndex("MarcaAgrupadaId")
                        .IsUnique();

                    b.HasIndex("RepresentanteId");

                    b.ToTable("Marca");
                });

            modelBuilder.Entity("Pivot.Domain.Ramo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo");

                    b.Property<DateTime>("DataAlteracao");

                    b.Property<DateTime>("DataCriacao");

                    b.Property<string>("Descricao");

                    b.Property<int>("UsuarioAlteracaoId");

                    b.Property<string>("UsuarioAlteracaoLogin");

                    b.Property<int>("UsuarioCriacaoId");

                    b.Property<string>("UsuarioCriacaoLogin");

                    b.HasKey("Id");

                    b.ToTable("Ramo");
                });

            modelBuilder.Entity("Pivot.Domain.Telefone", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo");

                    b.Property<long>("ContatoId");

                    b.Property<DateTime>("DataAlteracao");

                    b.Property<DateTime>("DataCriacao");

                    b.Property<string>("Numero");

                    b.Property<int>("UsuarioAlteracaoId");

                    b.Property<string>("UsuarioAlteracaoLogin");

                    b.Property<int>("UsuarioCriacaoId");

                    b.Property<string>("UsuarioCriacaoLogin");

                    b.HasKey("Id");

                    b.HasIndex("ContatoId");

                    b.ToTable("Telefone");
                });

            modelBuilder.Entity("Pivot.Domain.Atividade", b =>
                {
                    b.HasOne("Pivot.Domain.Ramo", "Ramo")
                        .WithMany("Atividades")
                        .HasForeignKey("RamoId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Pivot.Domain.Cidade", b =>
                {
                    b.HasOne("Pivot.Domain.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Pivot.Domain.Contato", b =>
                {
                    b.HasOne("Pivot.Domain.Cidade", "Cidade")
                        .WithMany()
                        .HasForeignKey("CidadeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Pivot.Domain.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Pivot.Domain.Email", b =>
                {
                    b.HasOne("Pivot.Domain.Contato", "Contato")
                        .WithMany()
                        .HasForeignKey("ContatoId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Pivot.Domain.Grafia", b =>
                {
                    b.HasOne("Pivot.Domain.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Pivot.Domain.Marca", b =>
                {
                    b.HasOne("Pivot.Domain.Atividade", "Atividade")
                        .WithMany()
                        .HasForeignKey("AtividadeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Pivot.Domain.Marca", "MarcaAgrupada")
                        .WithOne()
                        .HasForeignKey("Pivot.Domain.Marca", "MarcaAgrupadaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Pivot.Domain.Marca", "Representante")
                        .WithMany()
                        .HasForeignKey("RepresentanteId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Pivot.Domain.Telefone", b =>
                {
                    b.HasOne("Pivot.Domain.Contato", "Contato")
                        .WithMany()
                        .HasForeignKey("ContatoId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
